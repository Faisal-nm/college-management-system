package college.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;public class main_class extends JFrame implements ActionListener {    main_class() {        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();        int screenWidth = screenSize.width;        int screenHeight = screenSize.height;//        ImageIcon i1 = new ImageIcon(ClassLoader.getSystemResource("icon/img.jpg"));        ImageIcon i1 = new ImageIcon(getClass().getResource("/icon/gdc.jpeg"));        Image i2 = i1.getImage().getScaledInstance(screenWidth, screenHeight, Image.SCALE_DEFAULT);        ImageIcon i3 = new ImageIcon(i2);        JLabel img = new JLabel(i3);        add(img);        JMenuBar mb = new JMenuBar();        mb.setSize(screenWidth, 50);        String user = Login.user;        // new Information        if (user.equalsIgnoreCase("admin")) {            JMenu newInfo = new JMenu("New Information");            newInfo.setForeground(Color.BLACK);            mb.add(newInfo);            JMenuItem facultyInfo = new JMenuItem("New Faculty Information");            facultyInfo.setBackground(Color.WHITE);            facultyInfo.addActionListener(this);            newInfo.add(facultyInfo);            JMenuItem studentInfo = new JMenuItem("New Student Information");            studentInfo.setBackground(Color.WHITE);            studentInfo.addActionListener(this);            newInfo.add(studentInfo);        }        // Details        if (user.equalsIgnoreCase("admin") || user.equalsIgnoreCase("faculty")) {            JMenu details = new JMenu("View Details");            details.setForeground(Color.BLACK);            details.addActionListener(this);            mb.add(details);            if (user.equalsIgnoreCase("admin")) {                JMenuItem facultydetails = new JMenuItem("View Faculty Details");                facultydetails.setBackground(Color.WHITE);                facultydetails.addActionListener(this);                details.add(facultydetails);            }            JMenuItem studentdetails = new JMenuItem("View Student Details");            studentdetails.setBackground(Color.WHITE);            studentdetails.addActionListener(this);            details.add(studentdetails);        }        // attendance        JMenu attendance = new JMenu("Attendance");        attendance.setForeground(Color.BLACK);        mb.add(attendance);        if (user.equalsIgnoreCase("admin") || user.equalsIgnoreCase("faculty")) {            JMenuItem attendance1 = new JMenuItem("Mark Attendance");            attendance1.setBackground(Color.WHITE);            attendance1.addActionListener(this);            attendance.add(attendance1);        }        JMenuItem attendance2 = new JMenuItem("View Attendance");        attendance2.setBackground(Color.WHITE);        attendance2.addActionListener(this);        attendance.add(attendance2);        //events        JMenu events = new JMenu("Events");        events.setForeground(Color.BLACK);        mb.add(events);        if (user.equalsIgnoreCase("admin") || user.equalsIgnoreCase("faculty")) {            JMenuItem events1 = new JMenuItem("Add Event");            events1.setBackground(Color.WHITE);            events1.addActionListener(this);            events.add(events1);        }        JMenuItem events2 = new JMenuItem("View Events");        events2.setBackground(Color.WHITE);        events2.addActionListener(this);        events.add(events2);        //transport        JMenu transport = new JMenu("Transport");        transport.setForeground(Color.BLACK);        mb.add(transport);        if (user.equalsIgnoreCase("admin")) {            JMenuItem tpt1 = new JMenuItem("Add Transport Details");            tpt1.setBackground(Color.WHITE);            tpt1.addActionListener(this);            transport.add(tpt1);        }        JMenuItem tpt2 = new JMenuItem("View Transport Details");        tpt2.setBackground(Color.WHITE);        tpt2.addActionListener(this);        transport.add(tpt2);        // Leave        JMenu leave = new JMenu("Apply Leave");        leave.setForeground(Color.BLACK);        leave.addActionListener(this);        mb.add(leave);        if (user.equalsIgnoreCase("admin") || user.equalsIgnoreCase("faculty")) {            JMenuItem facultyLeave = new JMenuItem("Faculty Leave");            facultyLeave.setBackground(Color.WHITE);            facultyLeave.addActionListener(this);            leave.add(facultyLeave);        }        if (user.equalsIgnoreCase("admin") || user.equalsIgnoreCase("student")) {            JMenuItem studentLeave = new JMenuItem("Student Leave");            studentLeave.setBackground(Color.WHITE);            studentLeave.addActionListener(this);            leave.add(studentLeave);        }        // Leave Details        JMenu leaveDetails = new JMenu("Leave Details");        leaveDetails.setForeground(Color.BLACK);        leaveDetails.addActionListener(this);        mb.add(leaveDetails);        JMenuItem facultyleaveDetails = new JMenuItem("Faculty Leave Details");        facultyleaveDetails.setBackground(Color.WHITE);        facultyleaveDetails.addActionListener(this);        leaveDetails.add(facultyleaveDetails);        JMenuItem studentleaveDetails = new JMenuItem("Student Leave Details");        studentleaveDetails.setBackground(Color.WHITE);        studentleaveDetails.addActionListener(this);        leaveDetails.add(studentleaveDetails);        // Exams        JMenu exam = new JMenu("Examination");        exam.setForeground(Color.BLACK);        exam.addActionListener(this);        mb.add(exam);        JMenuItem ExaminationDetails = new JMenuItem("Examination Results");        ExaminationDetails.setBackground(Color.WHITE);        ExaminationDetails.addActionListener(this);        exam.add(ExaminationDetails);        if (user.equalsIgnoreCase("admin") || user.equalsIgnoreCase("faculty")) {            JMenuItem EnterMarks = new JMenuItem("Enter Marks");            EnterMarks.setBackground(Color.WHITE);            EnterMarks.addActionListener(this);            exam.add(EnterMarks);        }        // update Info        if (user.equalsIgnoreCase("admin") || user.equalsIgnoreCase("faculty")) {            JMenu updateInfo = new JMenu("Update Details");            updateInfo.setForeground(Color.BLACK);            updateInfo.addActionListener(this);            mb.add(updateInfo);            if (user.equalsIgnoreCase("admin")) {                JMenuItem updatefacultyinfo = new JMenuItem("Update Faculty Details");                updatefacultyinfo.setBackground(Color.WHITE);                updatefacultyinfo.addActionListener(this);                updateInfo.add(updatefacultyinfo);            }            JMenuItem updatestudentinfo = new JMenuItem("Update Student Details");            updatestudentinfo.setBackground(Color.WHITE);            updatestudentinfo.addActionListener(this);            updateInfo.add(updatestudentinfo);            updateInfo.add(updatestudentinfo);        }        // fee        JMenu fee = new JMenu("Fee Details");        fee.setForeground(Color.BLACK);        fee.addActionListener(this);        mb.add(fee);        JMenuItem feestructure = new JMenuItem("Fee Structure");        feestructure.setBackground(Color.WHITE);        feestructure.addActionListener(this);        fee.add(feestructure);        JMenuItem feeForm = new JMenuItem("Student Fee Form");        feeForm.setBackground(Color.WHITE);        feeForm.addActionListener(this);        fee.add(feeForm);        // utility        JMenu utility = new JMenu("Utility");        utility.setForeground(Color.BLACK);        mb.add(utility);        JMenuItem ca = new JMenuItem("Calculator");        ca.setBackground(Color.WHITE);        ca.addActionListener(this);        utility.add(ca);        JMenuItem Notepad = new JMenuItem("Notepad");        Notepad.setBackground(Color.WHITE);        Notepad.addActionListener(this);        utility.add(Notepad);        // about        JMenu about = new JMenu("About");        about.setForeground(Color.BLACK);        mb.add(about);        JMenuItem About = new JMenuItem("About");        About.setBackground(Color.WHITE);        About.addActionListener(this);        about.add(About);        // exit        JMenu exit = new JMenu("Exit");        exit.setForeground(Color.BLACK);        mb.add(exit);        JMenuItem Exit = new JMenuItem("Exit");        Exit.setBackground(Color.WHITE);        Exit.addActionListener(this);        exit.add(Exit);        setJMenuBar(mb);        setSize(screenWidth, screenHeight);        setVisible(true);    }    public static void main(String[] args) {        new main_class();    }    @Override    public void actionPerformed(ActionEvent e) {        String sm = e.getActionCommand();        if (sm.equals("Exit")) {            System.exit(15);        } else if (sm.equals("Calculator")) {            try {                Runtime.getRuntime().exec("calc.exe");            } catch (Exception E) {                E.printStackTrace();            }        } else if (sm.equals("Notepad")) {            try {                Runtime.getRuntime().exec("notepad.exe");            } catch (Exception E) {                E.printStackTrace();            }        } else if (sm.equals("New Faculty Information")) {            new AddFaculty();        } else if (sm.equals("New Student Information")) {            new AddStudent();        } else if (sm.equals("View Faculty Details")) {            new TeacherDetails();        } else if (sm.equals("View Student Details")) {//            setVisible(false);            StudentDetails.getInstance();        } else if (sm.equals("Faculty Leave")) {            new TeacherLeave();        } else if (sm.equals("Student Leave")) {            new StudentLeave();        } else if (sm.equals("Faculty Leave Details")) {            new TeacherLeaveDetails();        } else if (sm.equals("Student Leave Details")) {            new StudentLeaveDetails();        } else if (sm.equals("Update Faculty Details")) {            new UpdateTeacher();        } else if (sm.equals("Update Student Details")) {            new updateStudent();        } else if (sm.equals("Enter Marks")) {            new EnterMarks();        } else if (sm.equals("Examination Results")) {            new ExaminationDetails();        } else if (sm.equals("Fee Structure")) {            new FreeStructure();        } else if (sm.equals("Student Fee Form")) {            new StudentFeeForm();        } else if (sm.equals("About")) {            new About();        } else if (sm.equals("Mark Attendance")) {            new MarkAttendance();        } else if (sm.equals("View Attendance")) {            new ViewAttendance();        } else if (sm.equals("Add Event")) {            new AddEvent();        } else if (sm.equals("View Events")) {            new ViewEvents();        } else if (sm.equals("Add Transport Details")) {            new AddTransport();        } else if (sm.equals("View Transport Details")) {            new ViewTransport();        }    }}